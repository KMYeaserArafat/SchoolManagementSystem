<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        +z81aKJENv/DcQAAAABJRU5ErkJggg==
</value>
  </data>
</root>