<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnRefresh.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAJ15AACdeQFDYbRNAAAAB3RJ
        TUUH5AkYDzsyJoUXsAAAA9tJREFUWEfVl11Mm1UYx99NE67mhRd640g00RsTNN5wafy400zHFhNnNHpj
        MtF9yVdBZaOIg7GuOKBdHHVxRrMYMWF1DNp9M1hwYxmFFt7S0g+BAYN+0bd8FP8+z1kbF2ixdW82Ockv
        53A4z/P88z7POT1HWn+t2Co9fuCS9Gix9cXn6rprn629WvdIsTX/+W+vSVKJNbFI5bax9BzzxIYS64ck
        YKe0z7J7y4lb/V3uGZx3jOPN49cd0ueWPfy/DSXnPqK1T7JNVk0YFJ3Neaz8ys7Nlb3Gp/dfb36GoN6Q
        p+3X5WltJ3f8NBA3dPvQ2OVDnz+AaCSMcDCAHnkc9VYZuvMytp/oW35Ba/vhpeqBQ2yb8NHMPjeVX94l
        FXfkpBQnJveZn8qvcbhLjFFsPezHywedggKdD1v1HjRR8HhsDgoFjoSCCAZmBSxiLhTAfCQI/QUZBQ0e
        bDvyj/3b5It9sm+KsTm9gEJz7nstsld/SkFBiwPNPX40XfXj1M0JaM+6UPH7EPo9k7jhmkCfezW3Rm+j
        rG0QVbSWbdiWfWwz2fHFsRherxvxSntP56YX8LE5d0/rkNfUHoamzYPl+CKWFmKIE9fc09CYh1DVIa9J
        Ga3pdk0JG7ZlH+VmD0oNSmYCdpOAljN3BSwuLiAajQoUhUiM14LX8Nrk3+zjvgXcGzg5jlGQtUiKuG8B
        HPDHP3z4sn1YwOPIXBTDEwHY/pzBQAps/hl4p4PqCGAnX1HgTvuEoLJdxmQgjKOX3TjAee90rmI/zbf1
        jwnx619AuhTIDzIF8zEFCwl4zHOpCu9eVC3CC8OT0F10CSyO22KOnWeCKl+glA6XijPDAh5PByMwdI2i
        xuLEN9aRVXxN82bbuHpFWNXhFNuO0VKRTVER1lid+KzVjl2/rebT1kH8fMOvXhFWU9CiNoeABcyGIjhJ
        xai/5EZDCvQX3bAmUqXKFxibCcE+NisYuxMSjpNFmY555W6xrn8B/4sU8On20IqQBazchizggW1DdpLt
        QcQnYbIW4ksqXEhiVFAriysdfAT3jk6L+mAauzx46/ggNMYMr2SpBGQDfx1Olea0ne6GDuTV99DFVMbB
        lmW8VpulgCUSsPJHJhOqO2VYBvzY+6sd7+j9Ini9CXg1EwHJS2nhLyMYuROBPBXOCifxCe2CV47exAcN
        kzhk+guHKXhmAuha/r5J9n7XuoDtDT68a/Bgh9GbNW8ccaGwMQjd9xDBk/x7CujRkF9jd2uMCsqPKSij
        /r/AthX0DuBeQyR79r32w6SoI4efT/SMMuRW9japCfsUTzOKkVLAw2mS9DefkVPQ/1+Z+gAAAABJRU5E
        rkJggg==
</value>
  </data>
</root>